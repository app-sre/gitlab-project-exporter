[tool.poetry]
name = "gitlab-project-exporter"
version = "0.1.0"
description = "Gitlab Project Prometheus exporter"
authors = ["AppSRE <sd-app-sre@redhat.com>"]
license = "Apache 2.0"
readme = "README.md"
packages = [{ include = "gitlab_project_exporter" }]
homepage = "https://github.com/app-sre/gitlab-project-exporter"
repository = "https://github.com/app-sre/gitlab-project-exporter"
documentation = "https://github.com/app-sre/gitlab-project-exporter"

[tool.poetry.dependencies]
python = "^3.11"
python-gitlab = "^4.13.0"
fastapi = "^0.115.4"
uvicorn = "^0.32.0"
pydantic = "^2.9.2"
pydantic-settings = "^2.0.3"
prometheus-client  = "^0.21.0"

[tool.poetry.group.dev.dependencies]
fastapi = { extras = ["standard"], version = "^0.115.4" }
ruff = "0.7.1"
mypy = "^1.13.0"
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
responses = "^0.25.3"
httpx = "^0.27.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
gitlab-project-exporter = 'gitlab_project_exporter.__main__:app'

# Ruff configuration
[tool.ruff]
line-length = 88
target-version = 'py311'
required-version = "0.7.1" # keep in sync with dev dependencies!
src = ["gitlab_project_exporter"]
extend-exclude = [
    ".local", # used by poetry in local venv
    ".cache", # used by poetry in local venv
]
fix = true

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
    "CPY",     # Missing copyright header
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "D107",    # Missing docstring in __init__
    "D203",    # 1 blank line required before class docstring
    "D211",    # No blank lines allowed before class docstring
    "D212",    # multi-line-summary-first-line
    "D213",    # multi-line-summary-second-line
    "D4",      # Doc string style
    "E501",    # Line too long
    "PLR0904", # Too many public methods
    "PLR0913", # Too many arguments
    "PLR0917", # Too many positional arguments
    "S101",    # Use of assert detected. Pytest uses assert
    "S404",    # subprocess import
    "TRY300",  # try-consider-else
    # pydoclint
    "DOC",
    # May conflict with the formatter, https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q",
    "COM812",
    "COM819",
    "ISC001",
]
[tool.ruff.format]
preview = true

[tool.ruff.lint.isort]
known-first-party = ["gitlab_project_exporter"]

# Mypy configuration
[tool.mypy]
files = ["gitlab_project_exporter", "tests"]
enable_error_code = ["truthy-bool", "redundant-expr"]
no_implicit_optional = true
check_untyped_defs = true
warn_unused_ignores = true
show_error_codes = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

# Coverage configuration
[tool.coverage.run]
branch = true
omit = ["*/tests/*"]

[tool.coverage.report]
fail_under = 95
